.outer-wrapper {
    display: flex;
    height: 100%;
}

foreignObject {
    div.bg-blur {
        backdrop-filter: blur(20px);
        display: grid;
        place-content: center;
        // padding: 3rem;
    }
}
//the map itself
.location-map .location-map {
    font-size: 1rem;
    --bg-color: #090516;
    --bg-color-alt: #0e0920;
    position: relative;
    width: 100vw;
    height: 100vh;
    overflow: hidden;
    //wrapper for the individual location containers
    .location__container {
        background-image: linear-gradient(45deg, #19062b, #330b84c4), var(--bg-img);
        background-size: cover;
        background-position: center;
        padding: 3rem;
        .hex {
            // pointer-events: visiblePainted;
            foreignObject {
                pointer-events: none;
            }
            &:not(.keyedLocation) {
                &:not(.blank) {
                    foreignObject .bg-blur {
                        min-width: 5rem;
                        min-height: 5.5rem;
                        border-radius: 20px;
                    }
                    .overlay {
                        display: none;
                    }
                    --fade-in-duration: 100ms;
                    --fade-out-duration: 900ms;
                    --fade-out-delay: 400ms;
                    .material-symbols-outlined {
                        position: absolute;
                        top: 50%;
                        left: 50%;
                        transform: translate(-50%, -50%);
                        font-size: 3rem;
                        color: hsla(261, 63%, 16%, 0.578);
                        text-shadow: 0px 0px 4px transparent;
                        transition: color var(--fade-out-duration) ease-out var(--fade-out-delay),
                            text-shadow var(--fade-out-duration) ease-in var(--fade-out-delay);
                    }
                    &:hover {
                        // --accent-color: hsl(241, 100%, 68%);
                        path {
                            stroke: var(--accent-color);
                            transition: stroke var(--fade-in-duration) ease-in;
                        }
                        .material-symbols-outlined {
                            color: var(--accent-color);
                            text-shadow: 0px 0px 4px var(--accent-color);
                            transition: color var(--fade-in-duration) ease-in,
                                text-shadow var(--fade-in-duration) ease-in;
                        }
                    }
                    path {
                        // fill: url(#mainImagePattern);
                        fill: transparent;
                        stroke: #a4a4d73d;
                        transition: stroke var(--fade-out-duration) ease-out var(--fade-out-delay);
                        stroke-width: 1px;
                    }
                }
                path {
                    pointer-events: visiblePainted;
                    cursor: pointer;
                }
                &.blank,
                &.blank path {
                    pointer-events: none;
                }
                .overlay,
                .icon-container__overlay {
                    opacity: 100%;
                    transition: opacity 200ms ease-in-out;
                }
                &.hover {
                    .overlay,
                    .icon-container__overlay {
                        opacity: 0%;
                        transition: opacity 400ms ease-in-out;
                    }
                }
            }
        }
        foreignObject {
            width: 100%;
            height: 100%;
            img {
                &:not(.icon):not(.thumbnail-image) {
                    object-fit: contain;
                    &.view-mode {
                        object-fit: cover;
                        mask-image: url("/assets/locations/CityOfMyth/icons_and_symbols/HexMask.png");
                        mask-position: center;
                        mask-size: 90% 90%;
                        mask-repeat: no-repeat;
                        -webkit-mask-image: url("/assets/locations/CityOfMyth/icons_and_symbols/HexMask.png");
                        -webkit-mask-position: center;
                        -webkit-mask-size: 90% 90%;
                        -webkit-mask-repeat: no-repeat;
                    }
                }
                &.icon {
                    transform: translate(-50%, -50%);
                    width: 50%;
                    height: 50%;
                    position: absolute;
                    top: 45%;
                    left: 50%;
                    object-fit: contain;
                    pointer-events: none;
                }
            }
        }
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        &:not(.parent-list) {
            position: absolute;
            top: 50%;
            left: 50%;
            // height: 20rem;
            // width: 20rem;
            width: 100%;
            height: 100%;
            padding: 5rem;
            transform: translate(-50%, -50%);
            .hex path {
                stroke-width: 0px;
            }
        }
        // background-color: url(#gradient-pattern);
        background-color: var(--bg-color);
        // backdrop-filter: blur(10px);
        .hex {
        }
    }
}
//location hexes that are specific locations rather than just decor
.keyedLocation {
    pattern image.pattern-overlay {
        transform: scale(1.05, 1.01);
        transform-origin: center;
    }
}
.hex {
    &.blank {
        pointer-events: none;
        cursor: default;
        path {
            // fill: url(#mainImagePattern);
            fill: transparent;
            // fill: var(--bg-color);
        }
    }
}
.hex {
    &.keyedLocation {
        .main,
        .overlay {
            cursor: pointer;
        }
        .overlay {
            fill: var(--color-primary-base) !important;
            opacity: 40%;
            transition: opacity 200ms ease-out;
        }
        .popover {
            pointer-events: none;
            text-align: center;
            opacity: 0%;
            transition: opacity 200ms ease-out;
            background-color: hsla(253, 56%, 8%, 0.435);
            border-radius: 20px;
        }
        &.highlighted,
        &:hover {
            .popover {
                opacity: 100%;
            }
            .overlay {
                opacity: 0%;
                transition: opacity 200ms ease-out;
            }
        }
    }
}
.hex.overlay {
    &.keyedLocation {
        path {
            transition: opacity 300ms ease-in-out;
        }
    }
    &:not(.keyedLocation) {
        // display: none;
    }
}

.location-map {
    background-color: var(--bg-color);
    // background-color: #0e0920;
    position: relative;
    .parent-list {
        background-color: var(--bg-color);
        max-height: 100vh;
        width: 100%;
    }

    path {
        stroke-linecap: round;
    }
    path.passage {
        fill: transparent !important;
        pointer-events: stroke;
    }
    text {
        fill: white;
        text-anchor: middle;
        font-size: 0.5rem;
        pointer-events: painted;
    }
}
.connection-button__container {
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    $connections: (
        up: (
            top: 0%,
            left: 50%,
            margin-top: 2em,
            transform: translateX(-50%),
            width: 100%,
            max-width: unset,
            min-height: 10%,
        ),
        down: (
            margin-bottom: 2em,
            bottom: 0%,
            left: 50%,
            transform: translateX(-50%),
            max-width: unset,
            width: 100%,
            min-height: 10%,
        ),
        left: (
            top: 50%,
            left: 0%,
            transform: translateY(-50%),
            max-height: unset,
            height: 100%,
            min-width: 10%,
            margin-left: 2em,
        ),
        right: (
            top: 50%,
            right: 0%,
            max-height: unset,
            transform: translateY(-50%),
            height: 100%,
            min-width: 10%,
            margin-right: 2em,
        ),
    );
    @each $name, $direction in $connections {
        &.#{$name} {
            @each $position, $value in $direction {
                #{$position}: $value;
                img {
                    // @if ($position == "up" or $position == "$down") {
                    //     width: 100%;
                    // } @else {
                    //     height: 100%;
                    // }
                    // max-width: 100%;
                    // max-height: 100%;
                    // width: 100%;
                }
            }
        }
    }
}
.connection-hex {
    width: 6rem;
    height: 6rem;
    padding: unset;
    transform: rotateZ(-45deg);
    transform-origin: center;
    overflow: hidden;
    // clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
    .btn-text {
        transform-origin: top left;
        transform: rotateZ(45deg) translate(-50%, -50%);
        display: inline-flex;
        justify-content: center;
        backdrop-filter: unset;
        pointer-events: none;
        font-size: 1rem;
    }
    img.btn-img {
        transform-origin: center;
        transform: rotateZ(45deg) translateX(-50%);
        opacity: 20%;
        transition: opacity 150ms ease-in-out;
        width: 200%;
        height: 200%;
        object-fit: cover;
        max-width: 200%;
        max-height: 200%;
        object-position: center;
    }
    &:hover {
        img {
            opacity: 100%;
        }
    }
}

.removed {
    position: absolute;
    left: -999px;
    opacity: 0%;
    transform: scaleX(0);
    pointer-events: none;
    transition: opacity 200ms ease-out, transform;
}
.can-be-removed {
    opacity: 100%;
    transform: scaleX(100%);
    transition: all 200ms ease-out;
}
.can-be-hidden {
    opacity: 100%;
    // ransform: scaleX(100%);
    // transform-origin: center right;
    pointer-events: auto;
    transition: opacity 150ms ease-in;
    &.hex {
        // transition: opacity 450ms ease-out;
        transition: opacity 450ms ease-out 100ms;
    }
}
.hidden {
    opacity: 0%;
    // transform: scaleX(0);
    pointer-events: none;
    transition: opacity 150ms ease-out;
    &.hex {
        transition: opacity 150ms ease-out;
        // transition: opacity 450ms ease-out;
    }
}
.block-pointer-events {
    pointer-events: none;
}
